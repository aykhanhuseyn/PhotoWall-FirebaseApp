{"version":3,"sources":["data/posts.js","data/comments.js","redux/reducer.js","Components/Photo.js","Components/PhotoWall.js","Components/AddPhoto.js","Components/Comments.js","Components/Single.js","Components/Main.js","database/config.js","redux/actions.js","Components/App.js","index.js"],"names":["posts","comments","rootReducer","combineReducers","state","InitialPosts","action","type","filter","p","id","post","InitialComments","postId","comment","Photo","props","className","to","src","imageLink","alt","description","onClick","startRemovingPost","history","push","length","PropType","object","isRequired","PhotoWall","sort","a","b","map","index","key","PropTypes","array","AddPhoto","handleSubmit","bind","event","preventDefault","link","target","elements","value","newPost","Number","Date","this","startAddingPost","onHistory","onSubmit","placeholder","name","Component","Comments","startAddingComment","hidden","Single","match","params","find","findIndex","Main","startLoadingPosts","startLoadingComments","routes","exact","path","render","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","dispatch","ref","update","then","addPost","catch","error","console","log","once","snapshot","forEach","childSnapshot","val","loadPosts","remove","removePost","addComment","Object","values","loadComments","App","withRouter","connect","bindActionCreators","actions","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.99957ba4.chunk.js","sourcesContent":["export const posts = [];\r\n","export const comments = {};\r\n","import { posts as InitialPosts } from '../data/posts';\r\nimport { comments as InitialComments } from '../data/comments';\r\nimport { combineReducers } from 'redux';\r\n\r\nfunction posts(state = InitialPosts, action) {\r\n  switch (action.type) {\r\n    case 'REMOVE_POST':\r\n      return state.filter(p => p.id !== action.id);\r\n    case 'ADD_POST':\r\n      return [...state, action.post];\r\n    case 'LOAD_POSTS':\r\n      return action.posts;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction comments(state = InitialComments, action) {\r\n  switch (action.type) {\r\n    case 'ADD_COMMENT':\r\n      if (!state[action.postId]) {\r\n        return { ...state, [action.postId]: [action.comment] };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          [action.postId]: [...state[action.postId], action.comment]\r\n        };\r\n      }\r\n    case 'LOAD_COMMENTS':\r\n      return action.comments;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst rootReducer = combineReducers({ posts, comments });\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport PropType from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Photo(props) {\r\n  return (\r\n    <figure className=\"figure\">\r\n      <Link to={`/Single/${props.post.id}`}>\r\n        <img\r\n          className=\"photo\"\r\n          src={props.post.imageLink}\r\n          alt={props.post.description}\r\n        />\r\n      </Link>\r\n      <figcaption>\r\n        <p>{props.post.description}</p>\r\n      </figcaption>\r\n      <div className=\"button-container\">\r\n        <button\r\n          onClick={() => {\r\n            props.startRemovingPost(props.post.id);\r\n            props.history.push('/');\r\n          }}\r\n        >\r\n          Remove\r\n        </button>\r\n        <Link className=\"button\" to={`/Single/${props.post.id}`}>\r\n          <div className=\"comment-count\">\r\n            <div className=\"speech-bubble\"></div>\r\n            {props.comments[props.post.id]\r\n              ? props.comments[props.post.id].length\r\n              : 0}\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    </figure>\r\n  );\r\n}\r\n\r\nPhoto.PropType = {\r\n  post: PropType.object.isRequired\r\n};\r\n\r\nexport default Photo;\r\n","import React from 'react';\r\nimport Photo from './Photo';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction PhotoWall(props) {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Link className=\"addIcon\" to=\"/AddPhoto\" />\r\n      </div>\r\n      <div className=\"photoGrid\">\r\n        {props.posts\r\n          .sort((a, b) => b.id - a.id)\r\n          .map((post, index) => (\r\n            <Photo key={index} post={post} {...props} index={index} />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nPhotoWall.PropType = {\r\n  posts: PropTypes.array.isRequired\r\n};\r\n\r\nexport default PhotoWall;\r\n","import React, { Component } from 'react';\r\n\r\nclass AddPhoto extends Component {\r\n  constructor() {\r\n    super();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const link = event.target.elements.link.value;\r\n    const description = event.target.elements.description.value;\r\n    if (link && description) {\r\n      const newPost = {\r\n        id: Number(new Date()),\r\n        description: description,\r\n        imageLink: link\r\n      };\r\n      this.props.startAddingPost(newPost);\r\n      // this.props.addPost(newPost);\r\n      this.props.onHistory.push('/');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input type=\"text\" placeholder=\"Link\" name=\"link\" />\r\n          <input type=\"text\" placeholder=\"Description\" name=\"description\" />\r\n          <button>Post</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddPhoto;\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Comments extends Component {\r\n  constructor() {\r\n    super();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const comment = event.target.elements.comment.value;\r\n    comment && this.props.startAddingComment(this.props.id, comment);\r\n    event.target.elements.comment.value = '';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"comment\">\r\n        {this.props.comments.map((comment, index) => (\r\n          <p key={index}>{comment}</p>\r\n        ))}\r\n        <form className=\"comment-form\" onSubmit={this.handleSubmit}>\r\n          <input type=\"text\" name=\"comment\" placeholder=\"Comment...\" />\r\n          <input type=\"submit\" hidden />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Photo from './Photo';\r\nimport Comments from './Comments';\r\n\r\nexport default class Single extends Component {\r\n  render() {\r\n    const { match, posts } = this.props;\r\n    const id = Number(match.params.id);\r\n    const post = posts.find(post => post.id === id);\r\n    const comments = this.props.comments[id] || [];\r\n    const index = this.props.posts.findIndex(post => post.id === id);\r\n\r\n    return (\r\n      <div className=\"single-photo\">\r\n        <Photo post={post} {...this.props} index={index} />\r\n        <Comments\r\n          startAddingComment={this.props.startAddingComment}\r\n          comments={comments}\r\n          id={id}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PhotoWall from './PhotoWall';\r\nimport AddPhoto from './AddPhoto';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport Single from '../Components/Single';\r\n\r\nclass Main extends Component {\r\n  componentDidMount() {\r\n    this.props.startLoadingPosts();\r\n    this.props.startLoadingComments();\r\n  }\r\n\r\n  render() {\r\n    const routes = {\r\n      home: '/PhotoWall-FirebaseApp/',\r\n      addphoto: '/PhotoWall-FirebaseApp/AddPhoto',\r\n      single: '/PhotoWall-FirebaseApp/Single/:id'\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h1>\r\n          <Link to={routes.home}>PhotoWall</Link>\r\n        </h1>\r\n        <Route\r\n          exact\r\n          path={routes.home}\r\n          render={() => (\r\n            <div>\r\n              <PhotoWall {...this.props} />\r\n            </div>\r\n          )}\r\n        />\r\n        <Route\r\n          path={routes.addphoto}\r\n          render={({ history }) => (\r\n            <AddPhoto {...this.props} onHistory={history} />\r\n          )}\r\n        />\r\n\r\n        <Route\r\n          path={routes.single}\r\n          render={params => <Single {...this.props} {...params} />}\r\n        ></Route>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import * as firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyAjjvU9juqiekyut2YQ4XSwEXPtuZ2Tz8g',\r\n  authDomain: 'photowall-dda40.firebaseapp.com',\r\n  databaseURL: 'https://photowall-dda40.firebaseio.com',\r\n  projectId: 'photowall-dda40',\r\n  storageBucket: 'photowall-dda40.appspot.com',\r\n  messagingSenderId: '79365496914',\r\n  appId: '1:79365496914:web:12897f90703a03c659ff8b',\r\n  measurementId: 'G-58M6ZBNKF7'\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst database = firebase.database();\r\n\r\nexport { database };\r\n","//action creators and actions\r\nimport { database } from '../database/config';\r\n\r\nexport function startAddingPost(post) {\r\n  return dispatch => {\r\n    return database\r\n      .ref('post')\r\n      .update({ [post.id]: post })\r\n      .then(() => {\r\n        dispatch(addPost(post));\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n}\r\n\r\nexport function startLoadingPosts() {\r\n  return dispatch => {\r\n    let posts = [];\r\n    return database\r\n      .ref('post')\r\n      .once('value')\r\n      .then(snapshot => {\r\n        snapshot.forEach(childSnapshot => {\r\n          posts.push(childSnapshot.val());\r\n        });\r\n        dispatch(loadPosts(posts));\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n}\r\n\r\nexport function startRemovingPost(id) {\r\n  return dispatch => {\r\n    return database\r\n      .ref(`post/${id}`)\r\n      .remove()\r\n      .then(() => {\r\n        database.ref(`comments/${id}`).remove();\r\n        dispatch(removePost(id));\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n}\r\n\r\nexport function startAddingComment(postId, comment) {\r\n  return dispatch => {\r\n    return database\r\n      .ref(`comments/${postId}`)\r\n      .push(comment)\r\n      .then(() => {\r\n        dispatch(addComment(comment, postId));\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n}\r\n\r\nexport function startLoadingComments() {\r\n  return dispatch => {\r\n    let comments = {};\r\n    return database\r\n      .ref('comments')\r\n      .once('value')\r\n      .then(snapshot => {\r\n        snapshot.forEach(childSnapshot => {\r\n          comments[childSnapshot.key] = Object.values(childSnapshot.val());\r\n        });\r\n        dispatch(loadComments(comments));\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n}\r\n\r\nexport function removePost(id) {\r\n  return {\r\n    type: 'REMOVE_POST',\r\n    id\r\n  };\r\n}\r\n\r\nexport function addPost(post) {\r\n  return {\r\n    type: 'ADD_POST',\r\n    post\r\n  };\r\n}\r\n\r\nexport function loadPosts(posts) {\r\n  return {\r\n    type: 'LOAD_POSTS',\r\n    posts\r\n  };\r\n}\r\n\r\nexport function addComment(comment, postId) {\r\n  return {\r\n    type: 'ADD_COMMENT',\r\n    comment,\r\n    postId\r\n  };\r\n}\r\n\r\nexport function loadComments(comments) {\r\n  console.log(comments);\r\n  return {\r\n    type: 'LOAD_COMMENTS',\r\n    comments\r\n  };\r\n}\r\n","import Main from './Main';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as actions from '../redux/actions';\r\nimport { withRouter } from 'react-router';\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    posts: state.posts,\r\n    comments: state.comments\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators(actions, dispatch);\r\n}\r\n\r\nconst App = withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Main)\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/stylesheet.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './redux/reducer';\nimport { Provider } from 'react-redux';\nimport App from './Components/App';\nimport thunk from 'redux-thunk';\nimport { database } from './database/config';\n\n//const store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(), applyMiddleware(thunk) );\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  /* preloadedState, */\n\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}