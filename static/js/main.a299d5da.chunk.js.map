{"version":3,"sources":["data/posts.js","data/comments.js","redux/reducer.js","Components/Photo.js","Components/PhotoWall.js","Components/AddPhoto.js","Components/Comments.js","Components/Single.js","Components/Main.js","database/config.js","redux/actions.js","Components/App.js","index.js"],"names":["posts","comments","rootReducer","combineReducers","state","InitialPosts","action","type","filter","p","id","post","InitialComments","postId","comment","Photo","props","className","to","routes","single","src","imageLink","alt","description","onClick","startRemovingPost","history","push","home","length","PropType","object","isRequired","PhotoWall","addphoto","sort","a","b","map","index","key","PropTypes","array","AddPhoto","handleSubmit","bind","event","preventDefault","link","target","elements","value","newPost","Number","Date","this","startAddingPost","onHistory","onSubmit","placeholder","name","Component","Comments","startAddingComment","hidden","Single","match","params","find","findIndex","singleid","Main","startLoadingPosts","startLoadingComments","exact","path","render","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","dispatch","ref","update","then","addPost","catch","error","console","log","once","snapshot","forEach","childSnapshot","val","loadPosts","remove","removePost","addComment","Object","values","loadComments","App","withRouter","connect","bindActionCreators","actions","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a299d5da.chunk.js","sourcesContent":["export const posts = [];\r\n","export const comments = {};\r\n","import { posts as InitialPosts } from '../data/posts';\r\nimport { comments as InitialComments } from '../data/comments';\r\nimport { combineReducers } from 'redux';\r\n\r\nfunction posts(state = InitialPosts, action) {\r\n  switch (action.type) {\r\n    case 'REMOVE_POST':\r\n      return state.filter(p => p.id !== action.id);\r\n    case 'ADD_POST':\r\n      return [...state, action.post];\r\n    case 'LOAD_POSTS':\r\n      return action.posts;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction comments(state = InitialComments, action) {\r\n  switch (action.type) {\r\n    case 'ADD_COMMENT':\r\n      if (!state[action.postId]) {\r\n        return { ...state, [action.postId]: [action.comment] };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          [action.postId]: [...state[action.postId], action.comment]\r\n        };\r\n      }\r\n    case 'LOAD_COMMENTS':\r\n      return action.comments;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst rootReducer = combineReducers({ posts, comments });\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport PropType from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { routes } from './Main';\r\n\r\nfunction Photo(props) {\r\n  return (\r\n    <figure className=\"figure\">\r\n      <Link to={`${routes.single}${props.post.id}`}>\r\n        <img\r\n          className=\"photo\"\r\n          src={props.post.imageLink}\r\n          alt={props.post.description}\r\n        />\r\n      </Link>\r\n      <figcaption>\r\n        <p>{props.post.description}</p>\r\n      </figcaption>\r\n      <div className=\"button-container\">\r\n        <button\r\n          onClick={() => {\r\n            props.startRemovingPost(props.post.id);\r\n            props.history.push(routes.home);\r\n          }}\r\n        >\r\n          Remove\r\n        </button>\r\n        <Link className=\"button\" to={`${routes.single}${props.post.id}`}>\r\n          <div className=\"comment-count\">\r\n            <div className=\"speech-bubble\"></div>\r\n            {props.comments[props.post.id]\r\n              ? props.comments[props.post.id].length\r\n              : 0}\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    </figure>\r\n  );\r\n}\r\n\r\nPhoto.PropType = {\r\n  post: PropType.object.isRequired\r\n};\r\n\r\nexport default Photo;\r\n","import React from 'react';\r\nimport Photo from './Photo';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { routes } from './Main';\r\n\r\nfunction PhotoWall(props) {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Link className=\"addIcon\" to={routes.addphoto} />\r\n      </div>\r\n      <div className=\"photoGrid\">\r\n        {props.posts\r\n          .sort((a, b) => b.id - a.id)\r\n          .map((post, index) => (\r\n            <Photo key={index} post={post} {...props} index={index} />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nPhotoWall.PropType = {\r\n  posts: PropTypes.array.isRequired\r\n};\r\n\r\nexport default PhotoWall;\r\n","import React, { Component } from 'react';\r\nimport { routes } from './Main';\r\n\r\nclass AddPhoto extends Component {\r\n  constructor() {\r\n    super();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const link = event.target.elements.link.value;\r\n    const description = event.target.elements.description.value;\r\n    if (link && description) {\r\n      const newPost = {\r\n        id: Number(new Date()),\r\n        description: description,\r\n        imageLink: link\r\n      };\r\n      this.props.startAddingPost(newPost);\r\n      this.props.onHistory.push(routes.home);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input type=\"text\" placeholder=\"Link\" name=\"link\" />\r\n          <input type=\"text\" placeholder=\"Description\" name=\"description\" />\r\n          <button>Post</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddPhoto;\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Comments extends Component {\r\n  constructor() {\r\n    super();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const comment = event.target.elements.comment.value;\r\n    comment && this.props.startAddingComment(this.props.id, comment);\r\n    event.target.elements.comment.value = '';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"comment\">\r\n        {this.props.comments.map((comment, index) => (\r\n          <p key={index}>{comment}</p>\r\n        ))}\r\n        <form className=\"comment-form\" onSubmit={this.handleSubmit}>\r\n          <input type=\"text\" name=\"comment\" placeholder=\"Comment...\" />\r\n          <input type=\"submit\" hidden />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Photo from './Photo';\r\nimport Comments from './Comments';\r\n\r\nexport default class Single extends Component {\r\n  render() {\r\n    const { match, posts } = this.props;\r\n    const id = Number(match.params.id);\r\n    const post = posts.find(post => post.id === id);\r\n    const comments = this.props.comments[id] || [];\r\n    const index = this.props.posts.findIndex(post => post.id === id);\r\n\r\n    return (\r\n      <div className=\"single-photo\">\r\n        <Photo post={post} {...this.props} index={index} />\r\n        <Comments\r\n          startAddingComment={this.props.startAddingComment}\r\n          comments={comments}\r\n          id={id}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PhotoWall from './PhotoWall';\r\nimport AddPhoto from './AddPhoto';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport Single from '../Components/Single';\r\n\r\nexport const routes = {\r\n  home: '/PhotoWall-FirebaseApp/',\r\n  addphoto: '/PhotoWall-FirebaseApp/AddPhoto/',\r\n  single: '/PhotoWall-FirebaseApp/Single/',\r\n  singleid: '/PhotoWall-FirebaseApp/Single/:id/'\r\n};\r\n\r\nclass Main extends Component {\r\n  componentDidMount() {\r\n    this.props.startLoadingPosts();\r\n    this.props.startLoadingComments();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>\r\n          <Link to={routes.home}>PhotoWall</Link>\r\n        </h1>\r\n        <Route\r\n          exact\r\n          path={routes.home}\r\n          render={() => (\r\n            <div>\r\n              <PhotoWall {...this.props} />\r\n            </div>\r\n          )}\r\n        />\r\n        <Route\r\n          path={routes.addphoto}\r\n          render={({ history }) => (\r\n            <AddPhoto {...this.props} onHistory={history} />\r\n          )}\r\n        />\r\n\r\n        <Route\r\n          path={routes.singleid}\r\n          render={params => <Single {...this.props} {...params} />}\r\n        ></Route>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import * as firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyAjjvU9juqiekyut2YQ4XSwEXPtuZ2Tz8g',\r\n  authDomain: 'photowall-dda40.firebaseapp.com',\r\n  databaseURL: 'https://photowall-dda40.firebaseio.com',\r\n  projectId: 'photowall-dda40',\r\n  storageBucket: 'photowall-dda40.appspot.com',\r\n  messagingSenderId: '79365496914',\r\n  appId: '1:79365496914:web:12897f90703a03c659ff8b',\r\n  measurementId: 'G-58M6ZBNKF7'\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst database = firebase.database();\r\n\r\nexport { database };\r\n","//action creators and actions\r\nimport { database } from '../database/config';\r\n\r\nexport function startAddingPost(post) {\r\n  return dispatch => {\r\n    return database\r\n      .ref('post')\r\n      .update({ [post.id]: post })\r\n      .then(() => {\r\n        dispatch(addPost(post));\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n}\r\n\r\nexport function startLoadingPosts() {\r\n  return dispatch => {\r\n    let posts = [];\r\n    return database\r\n      .ref('post')\r\n      .once('value')\r\n      .then(snapshot => {\r\n        snapshot.forEach(childSnapshot => {\r\n          posts.push(childSnapshot.val());\r\n        });\r\n        dispatch(loadPosts(posts));\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n}\r\n\r\nexport function startRemovingPost(id) {\r\n  return dispatch => {\r\n    return database\r\n      .ref(`post/${id}`)\r\n      .remove()\r\n      .then(() => {\r\n        database.ref(`comments/${id}`).remove();\r\n        dispatch(removePost(id));\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n}\r\n\r\nexport function startAddingComment(postId, comment) {\r\n  return dispatch => {\r\n    return database\r\n      .ref(`comments/${postId}`)\r\n      .push(comment)\r\n      .then(() => {\r\n        dispatch(addComment(comment, postId));\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n}\r\n\r\nexport function startLoadingComments() {\r\n  return dispatch => {\r\n    let comments = {};\r\n    return database\r\n      .ref('comments')\r\n      .once('value')\r\n      .then(snapshot => {\r\n        snapshot.forEach(childSnapshot => {\r\n          comments[childSnapshot.key] = Object.values(childSnapshot.val());\r\n        });\r\n        dispatch(loadComments(comments));\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n}\r\n\r\nexport function removePost(id) {\r\n  return {\r\n    type: 'REMOVE_POST',\r\n    id\r\n  };\r\n}\r\n\r\nexport function addPost(post) {\r\n  return {\r\n    type: 'ADD_POST',\r\n    post\r\n  };\r\n}\r\n\r\nexport function loadPosts(posts) {\r\n  return {\r\n    type: 'LOAD_POSTS',\r\n    posts\r\n  };\r\n}\r\n\r\nexport function addComment(comment, postId) {\r\n  return {\r\n    type: 'ADD_COMMENT',\r\n    comment,\r\n    postId\r\n  };\r\n}\r\n\r\nexport function loadComments(comments) {\r\n  console.log(comments);\r\n  return {\r\n    type: 'LOAD_COMMENTS',\r\n    comments\r\n  };\r\n}\r\n","import Main from './Main';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as actions from '../redux/actions';\r\nimport { withRouter } from 'react-router';\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    posts: state.posts,\r\n    comments: state.comments\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators(actions, dispatch);\r\n}\r\n\r\nconst App = withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Main)\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/stylesheet.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './redux/reducer';\nimport { Provider } from 'react-redux';\nimport App from './Components/App';\nimport thunk from 'redux-thunk';\nimport { database } from './database/config';\n\n//const store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(), applyMiddleware(thunk) );\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  /* preloadedState, */\n\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}